Improving the accuracy of a model can be approached in several ways. Here are a few suggestions:

Add more Convolutional Layers: Deeper networks can extract more complex features. You could add more Conv2D and MaxPooling2D layers to your model.

Increase the number of filters: You could increase the number of filters in the Conv2D layers. This allows the model to learn more complex representations.

Add Dropout layers: Dropout layers can help to prevent overfitting by randomly setting a fraction of input units to 0 at each update during training time.

Use Data Augmentation: If you're not already doing so, use data augmentation techniques to artificially increase the size of your training set and make your model more robust.

Increase the number of epochs: Sometimes, models need more epochs to converge. You could try increasing the number of epochs.

Tune the learning rate: The learning rate can have a big impact on your model's performance. You could try using a learning rate scheduler to decrease the learning rate as training progresses.

Try different optimizers: Different optimizers can yield different results. You could try using SGD, RMSprop, or others.

Remember, it's important to monitor both training and validation accuracy to ensure your model isn't overfitting. If your training accuracy continues to improve significantly while your validation accuracy stalls or decreases, your model is likely overfitting and you should try techniques like dropout or regularization to mitigate this.